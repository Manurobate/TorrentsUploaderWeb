name: Release Workflow

on:
  workflow_run:
    workflows: [ "Workflow master" ]
    types:
      - completed

jobs:
  release_version:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_branch }}

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}

      - name: Perform release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          NEW_VERSION=$(jq -r '.workflow_run.outputs.new_version' "$GITHUB_EVENT_PATH")
          NEW_DEV_VERSION=$(jq -r '.workflow_run.outputs.new_dev_version' "$GITHUB_EVENT_PATH")
          mvn --batch-mode release:prepare release:perform -DreleaseVersion=$NEW_VERSION -DdevelopmentVersion=$NEW_DEV_VERSION
          git push origin HEAD --tags

#  docker:
#    runs-on: ubuntu-latest
#    needs: release_version
#    steps:
#      - name: Check out code
#        uses: actions/checkout@v4
#
#      - name: Log in to Docker Hub
#        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin
#
#      - name: Build Docker image
#        run: docker build . -t ${{ secrets.DOCKER_HUB_USERNAME }}/my-spring-boot-app:latest
#
#      - name: Push Docker image
#        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/my-spring-boot-app:latest